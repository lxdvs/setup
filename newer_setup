source ~/.bashrc

export HISTCONTROL=ignoredups:erasedups  # no duplicate entries
export HISTSIZE=100000                   # big big history
export HISTFILESIZE=100000               # big big history
shopt -s histappend                      # append to history, don't overwrite it

# Save and reload the history after each command finishes
export PROMPT_COMMAND="history -a; history -c; history -r; $PROMPT_COMMAND"

RED="\[\033[0;31m\]"
YELLOW="\[\033[0;33m\]"
GREEN="\[\033[0;32m\]"

PS1="$RED\$(date +%H:%M) \w$YELLOW (\$(parse_git_branch))$GREEN\$ "

alias gg='git commit -am 'gg''
alias subl='/Applications/Sublime\ Text.app/Contents/SharedSupport/bin/subl'


alias recent='for k in `git branch | perl -pe s/^..//`; do echo -e `git show --pretty=format:"%Cgreen%ci %Cblue%cr%Creset" $k -- | head -n 1`\\t$k; done | sort'
alias st='git status'
alias ..='cd ..'
alias emuproxy='emulator @froyo -http-proxy http://127.0.0.1:8888 &'
alias suremerge='/Applications/guiffy102/suremerge.command'
alias g='git'
alias ontop='git commit -a --amend -C HEAD'
alias base='git fetch origin && git rebase origin/main'
alias boom='git commit -a '
alias ibase='git fetch origin && git rebase -i origin/main'
alias req='git push origin :`parse_git_branch`; git push origin HEAD && ./scripts/pr_link'
alias put='git push origin HEAD:main && git push origin:`parse_git_branch`'
alias astop='adb shell am force-stop com.airbnb.android'
alias solve='git add --all && git rebase --continue'

alias recent='for k in `git branch | perl -pe s/^..//`; do echo -e `git show --pretty=format:"%Cgreen%ci %Cblue%cr%Creset" $k -- | head -n 1`\\t$k; done | sort'
alias nuke='git reset --hard && git clean -f -X -d'
alias nukemodules='git submodule foreach "nuke"'

alias cherry='git cherry-pick'
alias g='git'
alias bashprof='subl ~/.bash_profile'
alias bashreset='source ~/.bash_profile'
alias python='python3'
eval "$(/opt/homebrew/bin/brew shellenv)"
alias f='find . 2> /dev/null | grep '
alias tf='grep -Rnwi --color . -e '
function mkvenv {
  	python -m venv venv
  	source venv/bin/activate
}
function venv {
  	source venv/bin/activate
}

function add_to_pypath {
  if [ -d "$1" ]; then
    export PYTHONPATH="$1:$PYTHONPATH"
    echo $PYTHONPATH
  else
    echo "Error: $1 is not a directory."
  fi
}

function add_to_path {
  if [ -d "$1" ]; then
    export PATH="$1:$PATH"
    echo $PYTHONPATH
  else
    echo "Error: $1 is not a directory."
  fi
}

# [[ -s "$HOME/.rvm/scripts/rvm" ]] && source "$HOME/.rvm/scripts/rvm" 
# # Load RVM into a shell session *as a function*

# export ANDROID_HOME=~/android-sdks
# source ~/.stemcellrc
source ~/.git-completion.sh
